name: ApiOS CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build apios services
        run: |
          docker compose build
          docker build -t apios-api:latest -f api/Dockerfile .
        working-directory: apios
  verify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Start services
        run: docker compose up -d
        working-directory: apios
      - name: Run steps 006-013
        run: ./run-steps.bash --from 006 --to 013 --log quiet
      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dev requirements
        run: pip install -r requirements-dev.txt
        working-directory: apios
      - name: Lint
        run: |
          flake8 src || true
          black --check src || true
        working-directory: apios
      - name: Run pytest
        env:
          APISQLITE_DB_PATH: 'test.db'
          JWT_SECRET: test-secret
        run: pytest -q
        working-directory: apios
      - name: Run ACTION-014..015
        run: ./run-steps.bash --from 014 --to 015 --log quiet
      - name: Collect logs on failure
        if: failure()
        run: |
          mkdir -p ci-logs
          docker ps -a > ci-logs/ps.txt || true
          docker --context default logs apios > ci-logs/apios.log 2>&1 || true
          docker --context default logs apios-mongo > ci-logs/apios-mongo.log 2>&1 || true
          docker --context default logs apios-sqlite > ci-logs/apios-sqlite.log 2>&1 || true
          ls -la ./apios/data > ci-logs/data-ls.txt || true
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ci-logs
          path: ci-logs
